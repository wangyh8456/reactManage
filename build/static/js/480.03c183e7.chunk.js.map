{"version":3,"file":"static/js/480.03c183e7.chunk.js","mappings":"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","sources":["views/Menu/modal.jsx","views/Menu/index.jsx"],"sourcesContent":["import React from 'react'\r\nimport {Form,Input,Button,message,Select} from 'antd'\r\nimport * as api from '../../api'\r\nimport './index.module.scss'\r\n\r\nexport default function Menumodal(props) {\r\n    const [modalform]=Form.useForm();\r\n    const {current}=props;\r\n    const isUpdate=current?.id;\r\n\r\n    React.useEffect(()=>{\r\n        initForm();\r\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    async function submit(val){\r\n        const initdata={\r\n            name:val.name,\r\n            sort:val.sort||0\r\n        }\r\n        if(val.pid){\r\n            const pos=props.allmenu.findIndex(e=>e.value===val.pid);\r\n            initdata.level=Number(props.allmenu[pos].level)+1;\r\n            initdata.pid=val.pid;\r\n        }else{\r\n            initdata.level=1;\r\n            initdata.pid=null;\r\n        }\r\n        let data,result;\r\n        if(isUpdate){\r\n            data={...initdata,id:current.id}\r\n            result=await api.updateMenu(data);\r\n        }else{\r\n            data={...initdata}\r\n            result=await api.addMenu(data);\r\n        }\r\n        if(result.status===200){\r\n            message.success({content:result.message,duration:2});\r\n            props.close();\r\n            props.getList();\r\n            props.getAllList();\r\n        }else{\r\n            message.error({content:result.message,duration:2});\r\n        }\r\n    }\r\n    function initForm(){\r\n        if(current?.id){\r\n            modalform.setFieldsValue({\r\n                name:current.name,\r\n                sort:current.sort\r\n            })\r\n            if(current?.pid&&Number(current?.pid)>=0){\r\n                modalform.setFieldsValue({\r\n                    pid:Number(current.pid),\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form layout=\"vertical\" form={modalform} name=\"modalform\" onFinish={submit} onFinishFailed={(val)=>{console.log(val)}}>\r\n            <Form.Item name='name' label=\"名称\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: '请输入路由名称!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name='sort' label=\"排序\">\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n                name=\"pid\"\r\n                label=\"上级节点\"\r\n            >\r\n                <Select placeholder=\"-请选择-\" options={props.allmenu} allowClear>\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item style={{textAlign:'center'}}>\r\n                <Button style={{marginRight:'30px'}} onClick={()=>{modalform.resetFields()}}>重置</Button>\r\n                <Button type=\"primary\" htmlType=\"submit\">确认</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n","import React,{useEffect,useState,useRef} from 'react'\r\nimport * as api from '../../api'\r\nimport {Table,Space,Button,Modal,Spin,message,Empty} from 'antd'\r\nimport {\r\n    PlusOutlined,\r\n    ExclamationCircleOutlined\r\n} from '@ant-design/icons';\r\nimport Menumodal from './modal'\r\nconst {confirm}=Modal;\r\n\r\nexport default function Menu() {\r\n    const [menus,setMenus] =useState([]); //菜单列表\r\n    const [loading,setLoading]=useState(false);\r\n    const [isModalVisible,setIsModalVisible]=useState(false);\r\n    const [current,setCurrent]=useState({});//现在在新增或编辑的菜单\r\n    const [allmenu,setAllMenu]=useState([]);\r\n    const [modaltitle,setModalTitle]=useState('新建菜单');\r\n    const fileRef=useRef();\r\n\r\n    const columns=[\r\n        {\r\n            title: '菜单ID',\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n            render: text => <>{text}</>,\r\n        },\r\n        {\r\n            title: '名称',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: '排序',\r\n            dataIndex: 'sort',\r\n            key: 'sort',\r\n        },\r\n        {\r\n            title: '操作',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n              <Space size=\"small\">\r\n                <Button onClick={()=>{updateMenu(record)}} type=\"primary\" >编辑</Button>\r\n                <Button onClick={()=>{deleteMenu(record.id)}} type=\"danger\" >删除</Button>\r\n              </Space>\r\n            ),\r\n          },\r\n    ]\r\n\r\n\r\n    useEffect(()=>{\r\n        getList();\r\n        getAllList();\r\n    },[]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    function deleteMenu(id){\r\n        confirm({\r\n            title: '删除菜单',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '确认要删除该菜单吗？',\r\n            async onOk() {\r\n                const result=await api.deleteMenu(id);\r\n                if(result.status===200){\r\n                    message.success({content:result.message,duration:2});\r\n                    getList();\r\n                    getAllList();\r\n                }else{\r\n                    message.error({content:result.message,duration:2});\r\n                }\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n    async function getAllList(){\r\n        setLoading(true);\r\n        const result=await api.menuList();\r\n        let list=result.data?result.data:[];\r\n        setAllMenu(list.map(item=>{\r\n            return {label:item.name,value:item.id,level:item.level||0}\r\n        }));\r\n        setLoading(false);\r\n    }\r\n    async function getList(){\r\n        setLoading(true);\r\n        const result=await api.getMenuList();\r\n        setMenus(result.data);\r\n        setLoading(false);\r\n    }\r\n    function addNew(){\r\n        setCurrent({});\r\n        setModalTitle('新建菜单');\r\n        setIsModalVisible(true);\r\n    }\r\n    function updateMenu(val){\r\n        setCurrent(val);\r\n        setModalTitle('编辑菜单');\r\n        setIsModalVisible(true);\r\n    }\r\n    async function downloadCSV(){\r\n        setLoading(true);\r\n        const result=await api.downloadMenuCSV();\r\n        console.log(result);\r\n        const blob = new Blob([result],{type: 'application/vnd.ms-excel'});\r\n        const downloadElement = document.createElement('a');\r\n        const href = window.URL.createObjectURL(blob); // 创建下载的链接\r\n        downloadElement.href = href;\r\n        downloadElement.download = '模板.csv'; // 下载后文件名\r\n        document.body.appendChild(downloadElement);\r\n        downloadElement.click(); // 点击下载\r\n        document.body.removeChild(downloadElement); // 下载完成移除元素\r\n        window.URL.revokeObjectURL(href); // 释放掉blob对象\r\n        message.success({content:'下载成功!',duration:2});\r\n        setLoading(false);\r\n    }\r\n    async function uploadfile(val){\r\n        try{\r\n            setLoading(true);\r\n            const formdata=new FormData();\r\n            formdata.append('file',val.target.files[0]);\r\n            await api.importMenuCSV(formdata);\r\n            fileRef.current.value='';\r\n            message.success({content:'导入成功!',duration:2});\r\n            getList();\r\n            getAllList();\r\n        }catch(e){\r\n            message.error({content:'导入失败!',duration:2});\r\n        }finally{\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Spin spinning={loading} size=\"large\" tip=\"加载中......\">\r\n            <div className=\"clearfix\">\r\n                <Space size={[8,16]} wrap style={{marginBottom:'20px'}}>\r\n                    <Button icon={<PlusOutlined />} type=\"primary\" onClick={()=>{addNew()}}>新增菜单</Button>\r\n                    <Button onClick={()=>{downloadCSV()}}>模板下载</Button>\r\n                    <div style={{display:'inline-block',position:'relative'}}> \r\n                        <Button onClick={()=>{downloadCSV()}}>批量导入</Button>\r\n                        <input type=\"file\"  onChange={(val)=>{uploadfile(val)}} ref={fileRef}\r\n                            style={{width:'100%',height:'100%',opacity:'0',position:'absolute',top:'0',left:'0'}}/>\r\n                    </div>\r\n                </Space>\r\n                <Modal title={modaltitle} visible={isModalVisible} onCancel={()=>{setIsModalVisible(false)}}\r\n                    bodyStyle={{maxHeight:'700px',overflowY:'auto'}}\r\n                    footer={null}\r\n                    style={{top:'50px'}}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Menumodal close={()=>{setIsModalVisible(false)}} getList={()=>{getList()}} current={current} allmenu={allmenu.filter(e=>e.value!==current.id)} getAllList={()=>{getAllList()}}></Menumodal>\r\n                </Modal>\r\n                {menus?.length>0?<Table columns={columns} dataSource={menus} rowKey=\"id\" pagination={false} defaultExpandAllRows={true}/>:\r\n                <Empty/>}\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n"],"names":["Menumodal","props","modalform","current","isUpdate","id","val","initdata","name","sort","pid","pos","allmenu","findIndex","e","value","level","Number","data","api","result","status","message","content","duration","close","getList","getAllList","React","setFieldsValue","layout","form","onFinish","onFinishFailed","console","log","label","rules","required","hasFeedback","placeholder","options","allowClear","style","textAlign","marginRight","onClick","resetFields","type","htmlType","confirm","Menu","useState","menus","setMenus","loading","setLoading","isModalVisible","setIsModalVisible","setCurrent","setAllMenu","modaltitle","setModalTitle","fileRef","useRef","columns","title","dataIndex","key","render","text","record","size","icon","ExclamationCircleOutlined","onOk","onCancel","list","map","item","downloadCSV","blob","Blob","downloadElement","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL","formdata","FormData","append","target","files","useEffect","spinning","tip","className","wrap","marginBottom","PlusOutlined","display","position","onChange","uploadfile","ref","width","height","opacity","top","left","visible","bodyStyle","maxHeight","overflowY","footer","destroyOnClose","filter","length","dataSource","rowKey","pagination","defaultExpandAllRows"],"sourceRoot":""}